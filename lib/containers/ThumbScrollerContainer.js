var b=Object.defineProperty;var l=(m,e,t)=>e in m?b(m,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):m[e]=t;var h=(m,e,t)=>l(m,typeof e!="symbol"?e+"":e,t);import"../node_modules/mibreit-lazy-loader/lib/tools/createLazyLoader.js";import p from"../node_modules/mibreit-lazy-loader/lib/components/LazyLoader.js";import{addClickEventListener as a}from"../node_modules/mibreit-dom-tools/lib/index.js";import"../node_modules/mibreit-lazy-loader/lib/components/Element.js";import T from"../factories/createThumbsWrapper.js";import d from"../components/Image.js";import w from"../components/ThumbsViewer.js";const V=7;class E{constructor(e,t,r,s){h(this,"_thumbsViewer",null);const u=r!=null&&r.numberOfVisibleThumbs?r.numberOfVisibleThumbs:V,n=this._prepareThumbs(t),i=new p(n,u,u),o=T(e,n,u,s);u<n.length?(this._thumbsViewer=this._prepareThumbsViewer(o,i,r==null?void 0:r.initialIndex),this._addThumbsViewerInteraction(this._thumbsViewer,o)):setTimeout(()=>{i.loadElement(0),i.setCurrentIndex(0)},0)}getThumbsViewer(){return this._thumbsViewer}_prepareThumbs(e){const t=new Array;for(let r=0;r<e.length;r++){const s=new d(e[r]);t.push(s)}return t}_prepareThumbsViewer(e,t,r=0){const s=new w(e);return s.addScrollIndexChangedCallback(u=>{t.setCurrentIndex(u)}),s.setCenterThumb(r),s}_addThumbsViewerInteraction(e,t){const{previousButton:r,nextButton:s}=t.getThumbScrollerButtons();a(s,()=>{e.scrollNext()}),a(r,()=>{e.scrollPrevious()})}}export{E as default};
