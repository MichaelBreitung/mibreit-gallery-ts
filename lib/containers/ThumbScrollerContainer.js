var b=Object.defineProperty;var c=(o,r,t)=>r in o?b(o,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[r]=t;var a=(o,r,t)=>c(o,typeof r!="symbol"?r+"":r,t);import"../node_modules/mibreit-lazy-loader/lib/tools/createLazyLoader.js";import i from"../node_modules/mibreit-lazy-loader/lib/components/LazyLoader.js";import{addClickEventListener as h}from"../node_modules/mibreit-dom-tools/lib/index.js";import"../node_modules/mibreit-lazy-loader/lib/components/Element.js";import p from"../components/Image.js";import d from"../factories/createThumbScrollerLayout.js";import T from"../components/ThumbScroller.js";const S=7;class w{constructor(r,t,e,l){a(this,"_thumbScroller",null);const s=e!=null&&e.numberOfVisibleThumbs?e.numberOfVisibleThumbs:S,u=this._prepareThumbs(t),m=new i(u,s,s),n=d(r,u,s,l);s<u.length?(this._thumbScroller=this._prepareThumbScroller(n,m,e==null?void 0:e.initialIndex),this._addThumbScrollerInteraction(this._thumbScroller,n)):setTimeout(()=>{m.loadElement(0),m.setCurrentIndex(0)},0)}getScroller(){return this._thumbScroller}_prepareThumbs(r){const t=new Array;for(let e=0;e<r.length;e++){const l=new p(r[e]);t.push(l)}return t}_prepareThumbScroller(r,t,e=0){const l=new T(r);return l.addScrollIndexChangedCallback(s=>{t.setCurrentIndex(s)}),l.scrollTo(e),l}_addThumbScrollerInteraction(r,t){const{previousButton:e,nextButton:l}=t.getThumbScrollerButtons();h(l,()=>{r.scrollNext()}),h(e,()=>{r.scrollPrevious()})}}export{w as default};
