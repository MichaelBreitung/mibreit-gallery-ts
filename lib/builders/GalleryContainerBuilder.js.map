{"version":3,"file":"GalleryContainerBuilder.js","sources":["../../src/builders/GalleryContainerBuilder.ts"],"sourcesContent":["/**\r\n * @author Michael Breitung\r\n * @copyright Michael Breitung Photography (www.mibreit-photo.com)\r\n */\r\n\r\nimport GalleryContainer from '../containers/GalleryContainer';\r\nimport SlideshowContainer, { SlideshowConfig } from '../containers/SlideshowContainer';\r\nimport IGalleryContainer from '../interfaces/IGalleryContainer';\r\nimport IImageViewer from '../interfaces/IImageViewer';\r\nimport IThumbScroller from '../interfaces/IThumbScroller';\r\nimport ThumbScrollerContainer, { ThumbScrollerConfig } from '../containers/ThumbScrollerContainer';\r\nimport IImageInfo from '../interfaces/IImageInfo';\r\nimport FullscreenContainer from '../containers/FullscreenContainer';\r\nimport {\r\n  addCssClass,\r\n  addCssStyle,\r\n  appendChildElement,\r\n  createElement,\r\n  prependChildElement,\r\n  setInnerHtml,\r\n  addEventListener,\r\n  getElementDimension,\r\n  getElementPosition,\r\n  addKeyEventListener,\r\n  getKeyFromEvent,\r\n  addResizeEventListener,\r\n  removeCssStyle,\r\n} from 'mibreit-dom-tools';\r\n\r\n// images\r\nimport nextImageSvg from '../images/nextImage.svg';\r\nimport fullscreenSvg from '../images/fullscreen.svg';\r\n\r\n// styles\r\nimport styles from './GalleryContainerBuilder.module.css';\r\nimport animationStyles from '../tools/animations.module.css';\r\n\r\n// constants\r\nimport { GALLERY_BUTTONS_SHOW_OPACITY } from '../constants';\r\nimport SwipeHander, { ESwipeDirection, TPosition } from '../components/SwipeHandler';\r\nimport IFullscreen from '../interfaces/IFullscreen';\r\nimport debounce from '../tools/debounce';\r\nimport { ILazyLoader } from 'mibreit-lazy-loader';\r\n\r\nconst RESIZE_DEBOUNCE_TIMER = 500;\r\n\r\nexport default class GalleryContainerBuilder {\r\n  private _container: HTMLElement;\r\n  private _fullscreenButton: HTMLElement | null = null;\r\n  private _viewer: IImageViewer;\r\n  private _loader: ILazyLoader;\r\n  private _thumbScroller: IThumbScroller | null = null;\r\n  private _fullscreenContainer: IFullscreen | null = null;\r\n\r\n  constructor(container: HTMLElement, images: NodeListOf<HTMLElement>, config?: SlideshowConfig) {\r\n    this._container = container;\r\n\r\n    const slideshowContainer = new SlideshowContainer(images, config);\r\n    this._viewer = slideshowContainer.getViewer();\r\n    this._loader = slideshowContainer.getLoader();\r\n    const { previousButton, nextButton } = this._createPreviousNextButtons(container);\r\n    this._setupHoverEvents(container, [previousButton, nextButton]);\r\n    this._setupSwipeHandler(container, this._viewer);\r\n  }\r\n\r\n  public addThumbScroller(\r\n    thumbContainer: HTMLElement,\r\n    thumbs: NodeListOf<HTMLElement>,\r\n    config?: ThumbScrollerConfig\r\n  ): GalleryContainerBuilder {\r\n    this._thumbScroller = new ThumbScrollerContainer(thumbContainer, thumbs, config, (index: number) => {\r\n      this._loader.setCurrentIndex(index);\r\n      this._viewer.showImage(index);\r\n    }).getScroller();\r\n\r\n    if (this._thumbScroller) {\r\n      this._viewer.addImageChangedCallback((index: number, _imageInfo: IImageInfo) => {\r\n        this._thumbScroller!.scrollTo(index, true);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public build(): IGalleryContainer {\r\n    this._fullscreenContainer = new FullscreenContainer(this._container);\r\n    this._fullscreenButton = this._createFullscreenButton(this._container);\r\n    this._setupHoverEvents(this._container, [this._fullscreenButton]);\r\n    this._setupKeyEvents(this._viewer, this._fullscreenContainer);\r\n    this._setupFullscreenClickEvent(this._fullscreenButton, this._fullscreenContainer, this._viewer);\r\n    this._setupResizeHandler(this._viewer, this._thumbScroller);\r\n    if (this._fullscreenContainer && this._fullscreenButton) {\r\n      this._setupFullscreenChangedHandler(\r\n        this._fullscreenContainer,\r\n        this._fullscreenButton,\r\n        this._viewer,\r\n        this._thumbScroller\r\n      );\r\n    }\r\n\r\n    return new GalleryContainer(this._viewer, this._loader, this._thumbScroller, this._fullscreenContainer);\r\n  }\r\n\r\n  private _createPreviousNextButtons(container: HTMLElement): { previousButton: HTMLElement; nextButton: HTMLElement } {\r\n    const previousButton = createElement('div');\r\n    setInnerHtml(previousButton, nextImageSvg);\r\n    addCssClass(previousButton, styles.mibreit_GalleryPrevious);\r\n    addCssClass(previousButton, animationStyles.mibreit_GalleryFade);\r\n    prependChildElement(previousButton, container);\r\n    const nextButton = createElement('div');\r\n    setInnerHtml(nextButton, nextImageSvg);\r\n    addCssClass(nextButton, styles.mibreit_GalleryNext);\r\n    addCssClass(nextButton, animationStyles.mibreit_GalleryFade);\r\n    appendChildElement(nextButton, container);\r\n    return { previousButton, nextButton };\r\n  }\r\n\r\n  private _setupSwipeHandler(container: HTMLElement, imageViewer: IImageViewer) {\r\n    addCssStyle(container, 'touch-action', 'pinch-zoom pan-y');\r\n\r\n    new SwipeHander(container, (direction: ESwipeDirection, position: TPosition) => {\r\n      const containerWidth: number = getElementDimension(container).width;\r\n      const containerPosX: number = getElementPosition(container).x;\r\n      if (direction === ESwipeDirection.LEFT) {\r\n        imageViewer.showPreviousImage(direction);\r\n      } else if (direction === ESwipeDirection.RIGHT) {\r\n        imageViewer.showNextImage(direction);\r\n      } else {\r\n        if (position.x - containerPosX > containerWidth / 2) {\r\n          imageViewer.showNextImage();\r\n        } else {\r\n          imageViewer.showPreviousImage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private _setupResizeHandler(imageViewer: IImageViewer, thumbScroller: IThumbScroller | null) {\r\n    if (thumbScroller) {\r\n      const debouncedThumbResizer = debounce(\r\n        () => {\r\n          thumbScroller.reinitSize();\r\n        },\r\n        RESIZE_DEBOUNCE_TIMER,\r\n        false\r\n      );\r\n      addResizeEventListener(() => {\r\n        imageViewer.reinitSize();\r\n        debouncedThumbResizer();\r\n      });\r\n    } else {\r\n      addResizeEventListener(() => {\r\n        imageViewer.reinitSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private _createFullscreenButton(container: HTMLElement): HTMLElement {\r\n    const fullscreenButton = createElement('div');\r\n    setInnerHtml(fullscreenButton, fullscreenSvg);\r\n    addCssClass(fullscreenButton, styles.mibreit_GalleryFullscreenButton);\r\n    addCssClass(fullscreenButton, animationStyles.mibreit_GalleryFade);\r\n    appendChildElement(fullscreenButton, container);\r\n    return fullscreenButton;\r\n  }\r\n\r\n  private _setupHoverEvents(container: HTMLElement, buttons: Array<HTMLElement>) {\r\n    addEventListener(container, 'mouseenter', () => {\r\n      buttons.forEach((button: HTMLElement) => {\r\n        addCssStyle(button, 'opacity', `${GALLERY_BUTTONS_SHOW_OPACITY}`);\r\n      });\r\n    });\r\n    addEventListener(container, 'mouseleave', () => {\r\n      buttons.forEach((button: HTMLElement) => {\r\n        addCssStyle(button, 'opacity', '0');\r\n      });\r\n    });\r\n  }\r\n\r\n  private _setupKeyEvents(imageViewer: IImageViewer, fullScreen: IFullscreen) {\r\n    addKeyEventListener((event: KeyboardEvent) => {\r\n      const key: string = getKeyFromEvent(event);\r\n      switch (key) {\r\n        case 'ArrowRight':\r\n          imageViewer.showNextImage();\r\n          break;\r\n        case 'ArrowLeft':\r\n          imageViewer.showPreviousImage();\r\n          break;\r\n        case 'Escape':\r\n          fullScreen.deActivate();\r\n          break;\r\n        case 'f':\r\n          if (fullScreen.isFullscreenActive()) {\r\n            fullScreen.deActivate();\r\n          } else {\r\n            fullScreen.activate();\r\n          }\r\n          break;\r\n        default:\r\n          if (fullScreen.isFullscreenActive()) {\r\n            fullScreen.deActivate();\r\n          }\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _setupFullscreenClickEvent(\r\n    fullscreenButton: HTMLElement,\r\n    fullScreen: IFullscreen,\r\n    imageViewer: IImageViewer\r\n  ) {\r\n    addEventListener(fullscreenButton, 'pointerdown', (event: PointerEvent) => {\r\n      event.stopPropagation();\r\n    });\r\n    addEventListener(fullscreenButton, 'pointerup', (event: PointerEvent) => {\r\n      event.stopPropagation();\r\n      if (!fullScreen.isFullscreenActive()) {\r\n        fullScreen.activate();\r\n        imageViewer.reinitSize();\r\n        addCssStyle(fullscreenButton, 'display', 'none');\r\n      }\r\n    });\r\n  }\r\n\r\n  private _setupFullscreenChangedHandler(\r\n    FullscreenContainer: IFullscreen,\r\n    fullscreenButton: HTMLElement,\r\n    imageViewer: IImageViewer,\r\n    thumbScroller: IThumbScroller | null\r\n  ) {\r\n    FullscreenContainer.addFullscreenChangedCallback((active: boolean) => {\r\n      if (thumbScroller) {\r\n        thumbScroller.reinitSize();\r\n      }\r\n      imageViewer.reinitSize();\r\n      if (active) {\r\n        addCssStyle(fullscreenButton, 'display', 'none');\r\n      } else {\r\n        removeCssStyle(fullscreenButton, 'display');\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"names":["RESIZE_DEBOUNCE_TIMER","GalleryContainerBuilder","container","images","config","__publicField","slideshowContainer","SlideshowContainer","previousButton","nextButton","thumbContainer","thumbs","ThumbScrollerContainer","index","_imageInfo","FullscreenContainer","GalleryContainer","createElement","setInnerHtml","nextImageSvg","addCssClass","styles","animationStyles","prependChildElement","appendChildElement","imageViewer","addCssStyle","SwipeHander","direction","position","containerWidth","getElementDimension","containerPosX","getElementPosition","ESwipeDirection","thumbScroller","debouncedThumbResizer","debounce","addResizeEventListener","fullscreenButton","fullscreenSvg","buttons","addEventListener","button","GALLERY_BUTTONS_SHOW_OPACITY","fullScreen","addKeyEventListener","event","getKeyFromEvent","active","removeCssStyle"],"mappings":"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"}