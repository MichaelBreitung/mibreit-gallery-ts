var _=Object.defineProperty;var d=(m,t,s)=>t in m?_(m,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):m[t]=s;var n=(m,t,s)=>d(m,typeof t!="symbol"?t+"":t,s);import"../node_modules/mibreit-lazy-loader/lib/tools/createLazyLoader.js";import T from"../node_modules/mibreit-lazy-loader/lib/components/LazyLoader.js";import{addCssClass as u,createElement as l,setInnerHtml as b,prependChildElement as p,appendChildElement as c,addClickEventListener as o}from"../node_modules/mibreit-dom-tools/lib/index.js";import"../node_modules/mibreit-lazy-loader/lib/components/Element.js";import E from"../components/Image.js";import V from"../components/ThumbsViewer.js";import x from"../components/ThumbStage.js";import h from"./ThumbsScrollerBuilder.module.css.js";import a from"../images/nextThumbs.svg.js";import{NUMBER_OF_VISIBLE_THUMBS as f}from"../constants.js";class N{constructor(t,s,e,r){n(this,"_thumbContainerElement");n(this,"_previousButtonElement");n(this,"_nextButtonElement");n(this,"_lazyLoader");n(this,"_numberOfVisibleThumbs");n(this,"_numberOfThumbs");n(this,"_initialIndex");n(this,"_thumbsViewer");this._thumbContainerElement=t,u(this._thumbContainerElement,h.thumbs_scroller__parent),this._numberOfVisibleThumbs=e!=null&&e.numberOfVisibleThumbs?e.numberOfVisibleThumbs:f,this._initialIndex=e==null?void 0:e.initialIndex;const i=this._createThumbsArray(s);this._numberOfThumbs=i.length,this._createThumbStages(i,r),this._lazyLoader=new T(i,this._numberOfVisibleThumbs,this._numberOfVisibleThumbs),this._thumbsViewer=this._createThumbsViewer(this._thumbContainerElement,this._lazyLoader,this._initialIndex)}addPreviousNextButtons(){return this._numberOfVisibleThumbs<this._numberOfThumbs&&([this._previousButtonElement,this._nextButtonElement]=this._createPreviousNextButtons(this._thumbContainerElement)),this}build(){return this._thumbsViewer.reinitSize(),this._previousButtonElement&&this._nextButtonElement&&this._addThumbsViewerInteraction(this._thumbsViewer,this._previousButtonElement,this._nextButtonElement),this._numberOfVisibleThumbs>=this._numberOfThumbs&&setTimeout(()=>{this._lazyLoader.loadElement(0),this._lazyLoader.setCurrentIndex(0),this._thumbsViewer.setCenterThumb(0)},0),this._thumbsViewer}_createThumbsArray(t){const s=new Array;for(let e=0;e<t.length;e++){const r=new E(t[e]);s.push(r)}return s}_createThumbStages(t,s){t.forEach((e,r)=>{const i=new x(e.getHtmlElement(),e.getWidth(),e.getHeight());e.addWasLoadedCallback(()=>{i.reinitSize()}),i.showImage(),s&&i.addStageClickedCallback(()=>{s(r)})})}_createThumbsViewer(t,s,e=0){const r=new V(t,this._numberOfVisibleThumbs);return r.addScrollIndexChangedCallback(i=>{s.setCurrentIndex(i)}),r.setCenterThumb(e),r}_createPreviousNextButtons(t){const s=l("div");b(s,a),u(s,h.thumbs_scroller__previous_btn),p(s,t);const e=l("div");return b(e,a),u(e,h.thumbs_scroller__next_btn),c(e,t),[s,e]}_addThumbsViewerInteraction(t,s,e){o(e,()=>{t.scrollNext()}),o(s,()=>{t.scrollPrevious()})}}export{N as default};
