var _=Object.defineProperty;var d=(n,e,t)=>e in n?_(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>d(n,typeof e!="symbol"?e+"":e,t);import T from"../node_modules/mibreit-lazy-loader/lib/components/LazyLoader.js";import"../node_modules/mibreit-lazy-loader/lib/types/index.js";import{addCssClass as u,createElement as a,setInnerHtml as l,prependChildElement as p,appendChildElement as c,addClickEventListener as o}from"../node_modules/mibreit-dom-tools/lib/index.js";import E from"../components/Image.js";import V from"../components/ThumbsViewer.js";import w from"../components/ThumbStage.js";import h from"./ThumbsScrollerBuilder.module.css.js";import b from"../images/nextThumbs.svg.js";import{NUMBER_OF_VISIBLE_THUMBS as x}from"../constants.js";class z{constructor(e,t,s,m){r(this,"_thumbContainerElement");r(this,"_previousButtonElement");r(this,"_nextButtonElement");r(this,"_lazyLoader");r(this,"_numberOfVisibleThumbs");r(this,"_numberOfThumbs");r(this,"_initialIndex");r(this,"_thumbsViewer");this._thumbContainerElement=e,u(this._thumbContainerElement,h.thumbs_scroller__parent),this._numberOfVisibleThumbs=s!=null&&s.numberOfVisibleThumbs?s.numberOfVisibleThumbs:x,this._initialIndex=s==null?void 0:s.initialIndex;const i=this._createThumbsArray(t);this._numberOfThumbs=i.length,this._createThumbStages(i,m),this._lazyLoader=new T(i,0,this._numberOfVisibleThumbs),this._thumbsViewer=this._createThumbsViewer(this._initialIndex)}addPreviousNextButtons(){return this._numberOfVisibleThumbs<this._numberOfThumbs&&([this._previousButtonElement,this._nextButtonElement]=this._createPreviousNextButtons()),this}build(){return this._previousButtonElement&&this._nextButtonElement&&this._addThumbsViewerInteraction(this._previousButtonElement,this._nextButtonElement),this._numberOfVisibleThumbs>=this._numberOfThumbs&&setTimeout(()=>{this._lazyLoader.loadElement(0),this._lazyLoader.setCurrentIndex(0),this._thumbsViewer.setCenterThumb(0)},0),this._thumbsViewer}_createThumbsArray(e){const t=new Array;for(let s=0;s<e.length;s++){const m=new E(e[s]);t.push(m)}return t}_createThumbStages(e,t){e.forEach((s,m)=>{const i=new w(s.getHtmlElement(),s.getWidth(),s.getHeight());s.addWasLoadedCallback(()=>{i.showImage(),i.reinitSize()}),s.wasLoaded()&&i.showImage(),t&&i.addStageClickedCallback(()=>{t(m)})})}_createThumbsViewer(e=0){const t=new V(this._thumbContainerElement,this._numberOfVisibleThumbs);return t.addScrollIndexChangedCallback(s=>{this._lazyLoader.setCurrentIndex(s)}),t.setCenterThumb(e),t}_createPreviousNextButtons(){const e=a("div");l(e,b),u(e,h.thumbs_scroller__previous_btn),p(e,this._thumbContainerElement);const t=a("div");return l(t,b),u(t,h.thumbs_scroller__next_btn),c(t,this._thumbContainerElement),[e,t]}_addThumbsViewerInteraction(e,t){o(t,()=>{this._thumbsViewer.scrollNext()}),o(e,()=>{this._thumbsViewer.scrollPrevious()})}}export{z as default};
