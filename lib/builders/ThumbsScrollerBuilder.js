var d=Object.defineProperty;var p=(n,e,t)=>e in n?d(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var i=(n,e,t)=>p(n,typeof e!="symbol"?e+"":e,t);import T from"../node_modules/mibreit-lazy-loader/lib/components/LazyLoader.js";import"../node_modules/mibreit-lazy-loader/lib/types/index.js";import{addCssClass as h,createElement as a,setInnerHtml as l,prependChildElement as w,appendChildElement as E,addClickEventListener as o}from"../node_modules/mibreit-dom-tools/lib/index.js";import c from"../components/Image.js";import V from"../components/ThumbsViewer.js";import f from"../components/ThumbStage.js";import x,{ESwipeDirection as _}from"../components/SwipeHandler.js";import u from"./ThumbsScrollerBuilder.module.css.js";import b from"../images/nextThumbs.svg.js";import{NUMBER_OF_VISIBLE_THUMBS as C}from"../constants.js";class P{constructor(e,t,s,m){i(this,"_thumbContainerElement");i(this,"_previousButtonElement");i(this,"_nextButtonElement");i(this,"_lazyLoader");i(this,"_numberOfVisibleThumbs");i(this,"_numberOfThumbs");i(this,"_initialIndex");i(this,"_thumbsViewer");this._thumbContainerElement=e,h(this._thumbContainerElement,u.thumbs_scroller__parent),this._numberOfVisibleThumbs=s!=null&&s.numberOfVisibleThumbs?s.numberOfVisibleThumbs:C,this._initialIndex=s==null?void 0:s.initialIndex;const r=this._createThumbsArray(t);this._numberOfThumbs=r.length,this._createThumbStages(r,m),this._lazyLoader=new T(r,0,this._numberOfVisibleThumbs-1),this._thumbsViewer=this._createThumbsViewer(this._initialIndex)}addPreviousNextButtons(){return this._numberOfVisibleThumbs<this._numberOfThumbs&&([this._previousButtonElement,this._nextButtonElement]=this._createPreviousNextButtons()),this}build(){return this._previousButtonElement&&this._nextButtonElement&&this._addThumbsViewerInteraction(this._previousButtonElement,this._nextButtonElement),this._numberOfVisibleThumbs>=this._numberOfThumbs?setTimeout(()=>{this._lazyLoader.loadElement(0),this._lazyLoader.setCurrentIndex(0),this._thumbsViewer.setCenterThumb(0)},0):this._setupSwipeHandler(),this._thumbsViewer}_createThumbsArray(e){const t=new Array;for(let s=0;s<e.length;s++){const m=new c(e[s]);t.push(m)}return t}_createThumbStages(e,t){e.forEach((s,m)=>{const r=new f(s.getHtmlElement(),s.getWidth(),s.getHeight());s.addWasLoadedCallback(()=>{r.showImage(),r.reinitSize()}),s.wasLoaded()&&r.showImage(),t&&r.addStageClickedCallback(()=>{t(m)})})}_createThumbsViewer(e=0){const t=new V(this._thumbContainerElement,this._numberOfVisibleThumbs);return t.addScrollIndexChangedCallback(s=>{this._lazyLoader.setCurrentIndex(s)}),t.setCenterThumb(e),t}_createPreviousNextButtons(){const e=a("div");l(e,b),h(e,u.thumbs_scroller__previous_btn),w(e,this._thumbContainerElement);const t=a("div");return l(t,b),h(t,u.thumbs_scroller__next_btn),E(t,this._thumbContainerElement),[e,t]}_addThumbsViewerInteraction(e,t){o(t,()=>{this._thumbsViewer.scrollNext()}),o(e,()=>{this._thumbsViewer.scrollPrevious()})}_setupSwipeHandler(){new x(this._thumbContainerElement,(e,t)=>{e===_.RIGHT?this._thumbsViewer.scrollNext():e===_.LEFT&&this._thumbsViewer.scrollPrevious()})}}export{P as default};
