{"version":3,"file":"createGallery.js","sources":["../../src/factories/createGallery.ts"],"sourcesContent":["/**\r\n * @author Michael Breitung\r\n * @copyright Michael Breitung Photography (www.mibreit-photo.com)\r\n */\r\n\r\nimport { addCssStyle, getElement, getElements } from 'mibreit-dom-tools';\r\nimport checkSlideshowConfig from '../tools/checkSlideshowConfig';\r\n\r\nimport GalleryContainerBuilder from '../builders/GalleryContainerBuilder';\r\n\r\n// Interfaces and types\r\nimport IGalleryContainer from '../interfaces/IGalleryContainer';\r\nimport { SlideshowConfig } from '../containers/SlideshowContainer';\r\nimport { ThumbScrollerConfig } from '../containers/ThumbScrollerContainer';\r\nimport checkThumbScrollerConfig from '../tools/checkThumbScrollerConfig';\r\n\r\nexport type GalleryConfig = SlideshowConfig &\r\n  ThumbScrollerConfig & {\r\n    thumbContainerSelector?: string;\r\n    thumbSelector?: string;\r\n  };\r\n\r\nexport default function (containerSelector: string, imageSelector: string, config?: GalleryConfig): IGalleryContainer {\r\n  if (typeof containerSelector !== 'string') {\r\n    throw new Error('createGallery - first parameter must be containerSelector string');\r\n  }\r\n  if (typeof imageSelector !== 'string') {\r\n    throw new Error('createGallery - second parameter must be imageSelector string');\r\n  }\r\n  if (config) {\r\n    checkSlideshowConfig(config);\r\n  }\r\n  const elements = getElements(imageSelector);\r\n  const container = getElement(containerSelector);\r\n  if (container && elements?.length > 0) {\r\n    const builder = new GalleryContainerBuilder(container, elements, config);\r\n\r\n    if (typeof config?.thumbSelector === 'string' && typeof config?.thumbContainerSelector === 'string') {\r\n      checkThumbScrollerConfig(config);\r\n      const thumbContainer = getElement(config.thumbContainerSelector);\r\n      const thumbs = getElements(config.thumbSelector);\r\n      if (thumbContainer && thumbs) {\r\n        if (thumbs.length > 1) {\r\n          builder.addThumbScroller(thumbContainer, thumbs, config);\r\n        } else {\r\n          addCssStyle(thumbContainer, 'display', 'none');\r\n        }\r\n      }\r\n    }\r\n\r\n    return builder.build();\r\n  } else {\r\n    throw new Error('createGallery - no images selected');\r\n  }\r\n}\r\n"],"names":["createGallery","containerSelector","imageSelector","config","checkSlideshowConfig","elements","getElements","container","getElement","builder","GalleryContainerBuilder","checkThumbScrollerConfig","thumbContainer","thumbs","addCssStyle"],"mappings":"wQAsByB,SAAAA,EAAAC,EAA2BC,EAAuBC,EAA2C,CAChH,GAAA,OAAOF,GAAsB,SACzB,MAAA,IAAI,MAAM,kEAAkE,EAEhF,GAAA,OAAOC,GAAkB,SACrB,MAAA,IAAI,MAAM,+DAA+D,EAE7EC,GACFC,EAAqBD,CAAM,EAEvB,MAAAE,EAAWC,EAAYJ,CAAa,EACpCK,EAAYC,EAAWP,CAAiB,EAC1C,GAAAM,IAAaF,GAAA,YAAAA,EAAU,QAAS,EAAG,CACrC,MAAMI,EAAU,IAAIC,EAAwBH,EAAWF,EAAUF,CAAM,EAEvE,GAAI,OAAOA,GAAA,YAAAA,EAAQ,gBAAkB,UAAY,OAAOA,GAAA,YAAAA,EAAQ,yBAA2B,SAAU,CACnGQ,EAAyBR,CAAM,EACzB,MAAAS,EAAiBJ,EAAWL,EAAO,sBAAsB,EACzDU,EAASP,EAAYH,EAAO,aAAa,EAC3CS,GAAkBC,IAChBA,EAAO,OAAS,EACVJ,EAAA,iBAAiBG,EAAgBC,EAAQV,CAAM,EAE3CW,EAAAF,EAAgB,UAAW,MAAM,EAGnD,CAEA,OAAOH,EAAQ,OAAM,KAEf,OAAA,IAAI,MAAM,oCAAoC,CAExD"}