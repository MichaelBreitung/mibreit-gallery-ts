{"version":3,"file":"createFullscreenOnlyGallery.js","sources":["../../src/factories/createFullscreenOnlyGallery.ts"],"sourcesContent":["/**\r\n * @author Michael Breitung\r\n * @copyright Michael Breitung Photography (www.mibreit-photo.com)\r\n */\r\n\r\nimport {\r\n  addCssClass,\r\n  addCssStyle,\r\n  appendChildElement,\r\n  cloneElement,\r\n  createElement,\r\n  getElement,\r\n  getElements,\r\n  removeCssStyle,\r\n} from 'mibreit-dom-tools';\r\n\r\nimport checkSlideshowConfig from '../tools/checkSlideshowConfig';\r\n\r\nimport GalleryContainerBuilder from '../builders/GalleryContainerBuilder';\r\n\r\n// Interfaces\r\nimport IGalleryContainer from '../interfaces/IGalleryContainer';\r\nimport { SlideshowConfig } from '../containers/SlideshowContainer';\r\n\r\nconst IMAGES_CONTAINER_CLASS = 'mibreit_gallery_fullscreen_only_container';\r\n\r\nfunction createImagesContainer(): HTMLElement {\r\n  const container = createElement('div');\r\n  addCssStyle(container, 'display', 'none');\r\n  addCssClass(container, IMAGES_CONTAINER_CLASS);\r\n  const body = getElement('body');\r\n  appendChildElement(container, body!);\r\n  return container;\r\n}\r\n\r\nexport default function (imageSelector: string, config: SlideshowConfig): IGalleryContainer {\r\n  if (typeof imageSelector !== 'string') {\r\n    throw new Error('createFullscreenOnlyGallery - first parameter must be imageSelector string');\r\n  }\r\n  checkSlideshowConfig(config);\r\n\r\n  const elements = getElements(imageSelector);\r\n  if (elements?.length > 0) {\r\n    const container = createImagesContainer();\r\n    elements.forEach((image: HTMLElement) => {\r\n      appendChildElement(cloneElement(image), container);\r\n    });\r\n    const clonedElements: NodeListOf<HTMLElement> = getElements(`.${IMAGES_CONTAINER_CLASS} > img`);\r\n    const builder = new GalleryContainerBuilder(container, clonedElements, config);\r\n    const galleryContainer = builder.build();\r\n\r\n    const fullscreen = galleryContainer.getFullscreen();\r\n    const viewer = galleryContainer.getViewer();\r\n    if (fullscreen && viewer) {\r\n      fullscreen.addFullscreenChangedCallback((active: boolean) => {\r\n        if (active) {\r\n          removeCssStyle(container, 'display');\r\n          viewer.reinitSize();\r\n        } else {\r\n          addCssStyle(container, 'display', 'none');\r\n        }\r\n      });\r\n    }\r\n    return galleryContainer;\r\n  } else {\r\n    throw new Error('createFullscreenOnlyGallery - no images selected');\r\n  }\r\n}\r\n"],"names":["IMAGES_CONTAINER_CLASS","createImagesContainer","container","createElement","addCssStyle","addCssClass","body","getElement","appendChildElement","createFullscreenOnlyGallery","imageSelector","config","checkSlideshowConfig","elements","getElements","image","cloneElement","clonedElements","galleryContainer","GalleryContainerBuilder","fullscreen","viewer","active","removeCssStyle"],"mappings":"sTAwBA,MAAMA,EAAyB,4CAE/B,SAASC,GAAqC,CACtC,MAAAC,EAAYC,EAAc,KAAK,EACzBC,EAAAF,EAAW,UAAW,MAAM,EACxCG,EAAYH,EAAWF,CAAsB,EACvC,MAAAM,EAAOC,EAAW,MAAM,EAC9B,OAAAC,EAAmBN,EAAWI,CAAK,EAC5BJ,CACT,CAEA,SAAAO,EAAyBC,EAAuBC,EAA4C,CACtF,GAAA,OAAOD,GAAkB,SACrB,MAAA,IAAI,MAAM,4EAA4E,EAE9FE,EAAqBD,CAAM,EAErB,MAAAE,EAAWC,EAAYJ,CAAa,EACtC,IAAAG,GAAA,YAAAA,EAAU,QAAS,EAAG,CACxB,MAAMX,EAAYD,IACTY,EAAA,QAASE,GAAuB,CACpBP,EAAAQ,EAAaD,CAAK,EAAGb,CAAS,CAAA,CAClD,EACD,MAAMe,EAA0CH,EAAY,IAAId,CAAsB,QAAQ,EAExFkB,EADU,IAAIC,EAAwBjB,EAAWe,EAAgBN,CAAM,EAC5C,QAE3BS,EAAaF,EAAiB,gBAC9BG,EAASH,EAAiB,YAChC,OAAIE,GAAcC,GACLD,EAAA,6BAA8BE,GAAoB,CACvDA,GACFC,EAAerB,EAAW,SAAS,EACnCmB,EAAO,WAAW,GAENjB,EAAAF,EAAW,UAAW,MAAM,CAC1C,CACD,EAEIgB,CAAA,KAED,OAAA,IAAI,MAAM,kDAAkD,CAEtE"}