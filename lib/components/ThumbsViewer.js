var o=Object.defineProperty;var _=(r,e,s)=>e in r?o(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var i=(r,e,s)=>_(r,typeof e!="symbol"?e+"":e,s);import{getChildNodes as c,createElement as a,addCssClass as n,wrapElements as d,getRootFontSize as f,getElementDimension as z,addCssStyle as h}from"../node_modules/mibreit-dom-tools/lib/index.js";import T from"./HorizontalScroller.js";import m from"./ThumbsViewer.module.css.js";class p{constructor(e,s){i(this,"_scroller",null);i(this,"_wrapperElement");i(this,"_thumbElements");i(this,"_thumbSizeRem");i(this,"_numberOfVisibleThumbs");i(this,"_scrollIndexChangedCallbacks",new Array);i(this,"_currentScrollIndex",0);this._numberOfVisibleThumbs=s,this._thumbElements=Array.from(e.children),this._wrapperElement=this._wrapThumbs(c(e)),this._thumbSizeRem=this._calculateThumbsize(),this._resizeThumbs(),this._numberOfVisibleThumbs<this._thumbElements.length&&(this._scroller=new T(this._thumbElements)),new ResizeObserver(()=>{this._reinitSize()}).observe(this._wrapperElement)}setCenterThumb(e,s=!0){if(this._scroller){let t=e;s&&(t-=Math.floor(this._numberOfVisibleThumbs/2));const l=this._normalizeIndex(t);this._currentScrollIndex=l;const u=-l*this._thumbSizeRem;this._scroller.scrollTo(u,!0),this._scrollIndexChangedCallbacks.forEach(b=>{b(this._currentScrollIndex)})}}scrollNext(){let e=this._currentScrollIndex+this._numberOfVisibleThumbs;const s=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===s?e=0:e>=s&&(e=s),this.setCenterThumb(e,!1)}scrollPrevious(){let e=this._currentScrollIndex-this._numberOfVisibleThumbs;const s=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===0?e=s:e<0&&(e=0),this.setCenterThumb(e,!1)}addScrollIndexChangedCallback(e){this._scrollIndexChangedCallbacks.includes(e)||this._scrollIndexChangedCallbacks.push(e)}_reinitSize(){this._thumbSizeRem=this._calculateThumbsize(),this._resizeThumbs(),this.setCenterThumb(this._currentScrollIndex,!1)}_normalizeIndex(e){const s=this._thumbElements.length-this._numberOfVisibleThumbs;return e>=s?s:e<0?0:e}_wrapThumbs(e){const s=a("div");return n(s,m.thumbs_viewer),this._numberOfVisibleThumbs>=this._thumbElements.length&&n(s,m.thumbs_viewer__centered),d(e,s),s}_calculateThumbsize(){const e=f();return z(this._wrapperElement).width/e/this._numberOfVisibleThumbs}_resizeThumbs(){const e=this._thumbSizeRem*.9,s=this._thumbSizeRem*.05;for(let t=0;t<this._thumbElements.length;++t)h(this._thumbElements[t],"width",`${e}rem`),h(this._thumbElements[t],"height",`${e}rem`),h(this._thumbElements[t],"margin-left",`${s}rem`),h(this._thumbElements[t],"margin-right",`${s}rem`);h(this._wrapperElement,"height",`${this._thumbSizeRem*1.1}rem`)}}export{p as default};
