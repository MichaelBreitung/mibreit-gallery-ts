var b=Object.defineProperty;var c=(h,e,t)=>e in h?b(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var l=(h,e,t)=>c(h,typeof e!="symbol"?e+"":e,t);import{getChildNodes as _,createElement as a,addCssClass as m,wrapElements as d,getRootFontSize as f,getElementDimension as z,addCssStyle as n}from"../node_modules/mibreit-dom-tools/lib/index.js";import S from"./HorizontalScroller.js";import u from"./ThumbsViewer.module.css.js";class I{constructor(e,t){l(this,"_scroller",null);l(this,"_wrapperElement");l(this,"_thumbElements");l(this,"_thumbSizeRem");l(this,"_numberOfVisibleThumbs");l(this,"_scrollIndexChangedCallbacks",new Array);l(this,"_currentScrollIndex",0);this._numberOfVisibleThumbs=t,this._thumbElements=Array.from(e.children),this._wrapperElement=this._wrapThumbs(_(e),t,this._thumbElements.length),this._thumbSizeRem=this._calculateThumbsize(this._wrapperElement,t),this._resizeThumbs(this._thumbElements,this._thumbSizeRem),this._numberOfVisibleThumbs<this._thumbElements.length&&(this._scroller=new S(this._thumbElements)),new ResizeObserver(()=>{this.reinitSize()}).observe(this._wrapperElement)}reinitSize(){this._thumbSizeRem=this._calculateThumbsize(this._wrapperElement,this._numberOfVisibleThumbs),this._resizeThumbs(this._thumbElements,this._thumbSizeRem),this.setCenterThumb(this._currentScrollIndex,!1)}setCenterThumb(e,t=!0){if(this._scroller){let s=e;t&&(s-=Math.floor(this._numberOfVisibleThumbs/2));const r=this._normalizeIndex(s);this._currentScrollIndex=r;const i=-r*this._thumbSizeRem;this._scroller.scrollTo(i,!0),this._scrollIndexChangedCallbacks.forEach(o=>{o(this._currentScrollIndex)})}}scrollNext(){let e=this._currentScrollIndex+this._numberOfVisibleThumbs;const t=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===t?e=0:e>=t&&(e=t),this.setCenterThumb(e,!1)}scrollPrevious(){let e=this._currentScrollIndex-this._numberOfVisibleThumbs;const t=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===0?e=t:e<0&&(e=0),this.setCenterThumb(e,!1)}addScrollIndexChangedCallback(e){this._scrollIndexChangedCallbacks.includes(e)||this._scrollIndexChangedCallbacks.push(e)}_normalizeIndex(e){const t=this._thumbElements.length-this._numberOfVisibleThumbs;return e>=t?t:e<0?0:e}_wrapThumbs(e,t,s){const r=a("div");return m(r,u.thumbs_viewer),t>=s&&m(r,u.thumbs_viewer__centered),d(e,r),r}_calculateThumbsize(e,t){const s=f();return z(e).width/s/t}_resizeThumbs(e,t){const s=t*.9,r=t*.05;for(let i=0;i<e.length;++i)n(e[i],"width",`${s}rem`),n(e[i],"height",`${s}rem`),n(e[i],"margin",`${r}rem`)}}export{I as default};
