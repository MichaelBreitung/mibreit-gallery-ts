var o=Object.defineProperty;var _=(r,e,t)=>e in r?o(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var i=(r,e,t)=>_(r,typeof e!="symbol"?e+"":e,t);import{getChildNodes as c,createElement as a,addCssClass as n,wrapElements as d,getRootFontSize as f,getElementDimension as z,addCssStyle as h}from"../node_modules/mibreit-dom-tools/lib/index.js";import T from"./HorizontalScroller.js";import m from"./ThumbsViewer.module.css.js";class I{constructor(e,t){i(this,"_scroller",null);i(this,"_wrapperElement");i(this,"_thumbElements");i(this,"_thumbSizeRem");i(this,"_numberOfVisibleThumbs");i(this,"_scrollIndexChangedCallbacks",new Array);i(this,"_currentScrollIndex",0);this._numberOfVisibleThumbs=t,this._thumbElements=Array.from(e.children),this._wrapperElement=this._wrapThumbs(c(e)),this._thumbSizeRem=this._calculateThumbsize(),this._resizeThumbs(),this._numberOfVisibleThumbs<this._thumbElements.length&&(this._scroller=new T(this._thumbElements)),new ResizeObserver(()=>{this.reinitSize()}).observe(this._wrapperElement)}reinitSize(){this._thumbSizeRem=this._calculateThumbsize(),this._resizeThumbs(),this.setCenterThumb(this._currentScrollIndex,!1)}setCenterThumb(e,t=!0){if(this._scroller){let s=e;t&&(s-=Math.floor(this._numberOfVisibleThumbs/2));const l=this._normalizeIndex(s);this._currentScrollIndex=l;const u=-l*this._thumbSizeRem;this._scroller.scrollTo(u,!0),this._scrollIndexChangedCallbacks.forEach(b=>{b(this._currentScrollIndex)})}}scrollNext(){let e=this._currentScrollIndex+this._numberOfVisibleThumbs;const t=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===t?e=0:e>=t&&(e=t),this.setCenterThumb(e,!1)}scrollPrevious(){let e=this._currentScrollIndex-this._numberOfVisibleThumbs;const t=this._thumbElements.length-this._numberOfVisibleThumbs;this._currentScrollIndex===0?e=t:e<0&&(e=0),this.setCenterThumb(e,!1)}addScrollIndexChangedCallback(e){this._scrollIndexChangedCallbacks.includes(e)||this._scrollIndexChangedCallbacks.push(e)}_normalizeIndex(e){const t=this._thumbElements.length-this._numberOfVisibleThumbs;return e>=t?t:e<0?0:e}_wrapThumbs(e){const t=a("div");return n(t,m.thumbs_viewer),this._numberOfVisibleThumbs>=this._thumbElements.length&&n(t,m.thumbs_viewer__centered),d(e,t),t}_calculateThumbsize(){const e=f();return z(this._wrapperElement).width/e/this._numberOfVisibleThumbs}_resizeThumbs(){const e=this._thumbSizeRem*.9,t=this._thumbSizeRem*.05;for(let s=0;s<this._thumbElements.length;++s)h(this._thumbElements[s],"width",`${e}rem`),h(this._thumbElements[s],"height",`${e}rem`),h(this._thumbElements[s],"margin",`${t}rem`)}}export{I as default};
