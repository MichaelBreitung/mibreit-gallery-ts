{"version":3,"file":"SwipeHandler.js","sources":["../../src/components/SwipeHandler.ts"],"sourcesContent":["/**\r\n * @author Michael Breitung\r\n * @copyright Michael Breitung Photography (www.mibreit-photo.com)\r\n */\r\n\r\nimport { addEventListener } from 'mibreit-dom-tools';\r\n\r\nconst TRESHHOLD = 50;\r\nconst MAXTIME = 700;\r\n\r\nexport type TPosition = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport enum ESwipeDirection {\r\n  NONE,\r\n  LEFT,\r\n  RIGHT,\r\n}\r\n\r\nexport default class SwipeHander {\r\n  private _callback: (direction: ESwipeDirection, position: TPosition) => void;\r\n  private _touchStartTime: number | null = null;\r\n  private _touchStartPosition: TPosition | null = null;\r\n\r\n  constructor(target: HTMLElement, callback: (direction: ESwipeDirection, position: TPosition) => void) {\r\n    this._callback = callback;\r\n    addEventListener(target, 'pointerdown', this._touchStart);\r\n    addEventListener(target, 'pointerup', this._touchEnd);\r\n  }\r\n\r\n  private _touchStart = (event: PointerEvent) => {\r\n    console.log('SwipeHander#touchStart');\r\n    this._touchStartTime = Date.now();\r\n    this._touchStartPosition = this._getTouchPosition(event);\r\n  };\r\n\r\n  private _touchEnd = (event: PointerEvent) => {\r\n    console.log('SwipeHander#touchEnd');\r\n    if (this._touchStartTime && this._touchStartPosition && Date.now() - this._touchStartTime < MAXTIME) {\r\n      const touchEndPosition = this._getTouchPosition(event);\r\n      const direction = this._detectDirection(this._touchStartPosition, touchEndPosition);\r\n      console.log('SwipeHander#touchEnd - direction: ', direction);\r\n      this._callback(direction, touchEndPosition);\r\n    }\r\n    this._touchStartPosition = null;\r\n    this._touchStartTime = null;\r\n  };\r\n\r\n  private _getTouchPosition(event: PointerEvent): TPosition {\r\n    return {\r\n      x: event.pageX,\r\n      y: event.pageY,\r\n    };\r\n  }\r\n\r\n  private _detectDirection(start: TPosition, end: TPosition): ESwipeDirection {\r\n    const diff: number = start.x - end.x;\r\n    if (diff > TRESHHOLD) {\r\n      return ESwipeDirection.RIGHT;\r\n    } else if (diff < -TRESHHOLD) {\r\n      return ESwipeDirection.LEFT;\r\n    } else {\r\n      return ESwipeDirection.NONE;\r\n    }\r\n  }\r\n}\r\n"],"names":["TRESHHOLD","MAXTIME","ESwipeDirection","ESwipeDirection2","SwipeHander","target","callback","__publicField","event","touchEndPosition","direction","addEventListener","start","end","diff"],"mappings":"sPAOA,MAAMA,EAAY,GACZC,EAAU,IAOJ,IAAAC,GAAAA,IACVA,EAAAC,EAAA,KAAA,CAAA,EAAA,OACAD,EAAAC,EAAA,KAAA,CAAA,EAAA,OACAD,EAAAC,EAAA,MAAA,CAAA,EAAA,QAHUD,IAAAA,GAAA,CAAA,CAAA,EAMZ,MAAqBE,CAAY,CAK/B,YAAYC,EAAqBC,EAAqE,CAJ9FC,EAAA,kBACAA,EAAA,uBAAiC,MACjCA,EAAA,2BAAwC,MAQxCA,EAAA,mBAAeC,GAAwB,CAExC,KAAA,gBAAkB,KAAK,MACvB,KAAA,oBAAsB,KAAK,kBAAkBA,CAAK,CAAA,GAGjDD,EAAA,iBAAaC,GAAwB,CAEvC,GAAA,KAAK,iBAAmB,KAAK,qBAAuB,KAAK,MAAQ,KAAK,gBAAkBP,EAAS,CAC7F,MAAAQ,EAAmB,KAAK,kBAAkBD,CAAK,EAC/CE,EAAY,KAAK,iBAAiB,KAAK,oBAAqBD,CAAgB,EAE7E,KAAA,UAAUC,EAAWD,CAAgB,CAC5C,CACA,KAAK,oBAAsB,KAC3B,KAAK,gBAAkB,IAAA,GApBvB,KAAK,UAAYH,EACAK,EAAAN,EAAQ,cAAe,KAAK,WAAW,EACvCM,EAAAN,EAAQ,YAAa,KAAK,SAAS,CACtD,CAoBQ,kBAAkBG,EAAgC,CACjD,MAAA,CACL,EAAGA,EAAM,MACT,EAAGA,EAAM,KAAA,CAEb,CAEQ,iBAAiBI,EAAkBC,EAAiC,CACpE,MAAAC,EAAeF,EAAM,EAAIC,EAAI,EACnC,OAAIC,EAAOd,EACF,EACEc,EAAO,CAACd,EACV,EAEA,CAEX,CACF"}